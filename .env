# to initialize this databse in TablePlus or similar
# this needs to be done so the program knows what framework/database to push data to
# otherwise, it will throw an error

# in cmd line
#1.)
# flask db init

#2.)
# flask db migrate

#3.)
# flask db upgrade

# link to local database
#DATABASE_URL = "sqlite:////Users/ngeorge/Documents/Bitcoin/bolt_fun/sats_stream/web_app/main.db"

# need to use PostgreSQL for Heroku app to work
#DATABASE_URL = "postgresql://username:password@hostname/database"

# local postgres connection
DATABASE_URL = "postgresql://postgres:password@127.0.0.1:5432/postgres"

# heroku database postgres connection
#DATABASE_URL = "postgres://osfovoyospezdu:ed361b09a8915ea916936718c6ca483c05c13d114b6a78128e6b5ad43a4fc4d9@ec2-3-225-213-67.compute-1.amazonaws.com:5432/d9cg016g3198q4"

# fucking heroku

# copied heroku database credntials CLI into terminal, entered below to update url paths
#SQLALCHEMY_DATABASE_URI = os.environ.get('DATABASE_URL').replace("://", "ql://", 1)
#python SQLALCHEMY_DATABASE_URI = os.environ.get('DATABASE_URL').replace("postgres://", "postgresql://", 1)

# to create requirements.txt file for heroku, run this in the pipenv environment
# pipenv lock -r > requirements.txt

# how to initiate and create a table in the Heroku database

# connect to the database using the Heroku credentials provided
#psql -h ec2-3-225-213-67.compute-1.amazonaws.com -U osfovoyospezdu d9cg016g3198q4

# enter the password when prompted

# once connected create the table like shown below
# in the case of a "user" table, the name "user" must be in quotes
# user is a reserved word for postgres databases

#CREATE TABLE "user"
#(
#   id int PRIMARY KEY NOT NULL,
#   ln_address varchar(128),
#   link varchar(128),
#   unique_link varchar(128)
#)
#
#id = db.Column(db.Integer, primary_key=True)
#    ln_address = db.Column(db.String(128))
#    link = db.Column(db.String(128))
#    unique_link = db.Column(db.String(128))

